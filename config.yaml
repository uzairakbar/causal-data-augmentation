---
linear_simulaton:
    seed: 42
    n_samples: 2_000
    n_experiments: 10
    sweep_samples: 10
    methods:
        - ERM
        - DA+ERM
        - DA+UIV-5fold
        - DA+UIV-LOLO
        - DA+UIV-CC
        - DA+UIV-Pi
        - DA+UIV
        - DA+IV
    augmentations:
        - translation

nonlinear_simulation:
    seed: 42
    n_samples: 1_000
    n_experiments: 10
    methods:
        - ERM
        - DA+ERM
        - DA+UIV-5fold
        - DA+UIV-LOLO
        - DA+IV

optical_device:
    seed: 42
    n_samples: 1_000
    methods:
        - ERM
        - DA+ERM
        - DA+UIV-5fold
        - DA+UIV-LOLO
        - DA+UIV-CC
        - DA+UIV-Pi
        - DA+UIV
        - DA+IV
    augmentations:
        - rotation > hflip > vflip
        - gaussian-noise

colored_mnist:
    seed: 42
    num_seeds: 10
    n_samples: -1
    methods:
        - ERM
        - DA+ERM
        - DA+UIV+5fold
        - DA+UIV+LOLO
        - DA+IV
    augmentations:
        - jitter > translate

rotated_mnist:
    seed: 42
    num_seeds: 10
    n_samples: -1
    methods:
        - ERM
        - DA+ERM
        - DA+UIV+5fold
        - DA+UIV+LOLO
        - DA+IV
    augmentations:
        - rotation
        - flip
        - gan

hyperparameters:
    erm:
        lr: 0.001
        epochs: 40
    gmm:
        lr: 0.001
        epochs1: 4           # iterations to fit GMM weights
        epochs2: 10          # iterations to fit network for given GMM weights. total training iterations are `epoch1*epoch2`.
    cv:
        folds: 5            # k-fold CV number of folds
        frac: 0.2           # vanilla CV test set fraction
        samples: 10         # number of samples for random search
        n_jobs: -1          # number of jobs to run in parallel for hyperparam search
